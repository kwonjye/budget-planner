<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jye.budget.mapper.AssetMapper">
    <resultMap id="asset" type="jye.budget.entity.Asset">
        <id column="asset_id" property="assetId" />
        <result column="user_id" property="userId" />
        <result column="asset_name" property="assetName" />
        <result column="initial_amount" property="initialAmount" />
        <result column="current_amount" property="currentAmount" />
        <result column="is_allocated" property="allocated" />
        <result column="is_used" property="used" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>
    <sql id="asset">
        SELECT asset_id,
               user_id,
               asset_name,
               initial_amount,
               current_amount,
               is_allocated,
               is_used,
               created_at,
               updated_at
        FROM asset
    </sql>
    <select id="findByUserId" resultMap="asset">
        <include refid="asset"/>
        WHERE user_id = #{userId}
            AND is_used = true
    </select>
    <insert id="save" useGeneratedKeys="true" keyColumn="asset_id" keyProperty="assetId">
        INSERT INTO asset (
                           user_id,
                           asset_name,
                           initial_amount,
                           current_amount,
                           is_allocated,
                           created_at,
                           updated_at
        ) VALUES (
                  #{userId},
                  #{assetName},
                  #{initialAmount},
                  #{currentAmount},
                  #{isAllocated},
                  NOW(),
                  NOW()
                         )
    </insert>
    <select id="existsByAssetName" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM asset
            WHERE user_id = #{userId}
              AND is_used = true
              AND asset_name = #{assetName}
            <if test="assetId != null">
                AND asset_id != #{assetId}
            </if>
        )
    </select>
    <select id="findById" resultMap="asset">
        <include refid="asset"/>
        WHERE asset_id = #{assetId}
    </select>
    <update id="update">
        UPDATE asset
        SET asset_name = #{assetName},
            initial_amount = #{initialAmount},
            current_amount = #{currentAmount},
            is_allocated = #{isAllocated},
            updated_at = NOW()
        WHERE asset_id = #{assetId}
    </update>
    <delete id="delete">
        UPDATE asset
        SET is_used = false,
            updated_at = NOW()
        WHERE asset_id = #{assetId}
    </delete>
    <resultMap id="assetChange" type="jye.budget.entity.AssetChange">
        <id column="change_id" property="changeId" />
        <result column="calc_type" property="calcType" />
        <result column="amount" property="amount" />
        <result column="change_detail" property="changeDetail" />
        <result column="change_date" property="changeDate" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <association property="asset" resultMap="asset" columnPrefix="a_"/>
    </resultMap>
    <sql id="assetChange">
        SELECT ac.change_id,
               ac.calc_type,
               ac.amount,
               ac.change_detail,
               ac.change_date,
               ac.created_at,
               ac.updated_at,
               a.asset_id AS a_asset_id,
               a.user_id AS a_user_id,
               a.asset_name AS a_asset_name,
               a.initial_amount AS a_initial_amount,
               a.current_amount AS a_current_amount,
               a.is_allocated AS a_is_allocated,
               a.created_at AS a_created_at,
               a.updated_at AS a_updated_at
        FROM asset_change ac
        JOIN asset a ON ac.asset_id = a.asset_id AND is_used = true
    </sql>
    <select id="findChangeByReqAndUserId" resultMap="assetChange">
        <include refid="assetChange"/>
        WHERE a.user_id = #{userId}
            AND ac.amount > 0
            AND DATE_FORMAT(ac.change_date, '%Y-%m') = #{req.searchDate}
        <if test="req.assetId != null">
            AND a.asset_id = #{req.assetId}
        </if>
        <if test="req.calcType != null">
            AND ac.calc_type = #{req.calcType}
        </if>
        <if test='req.searchText != null and req.searchText != ""'>
            AND ac.change_detail LIKE CONCAT('%', #{req.searchText}, '%')
        </if>
        ORDER BY ac.change_date DESC
    </select>
    <insert id="change" useGeneratedKeys="true" keyColumn="change_id" keyProperty="changeId">
        INSERT INTO asset_change (
                                  asset_id,
                                  calc_type,
                                  amount,
                                  change_detail,
                                  change_date,
                                  created_at,
                                  updated_at
        ) VALUES (
                  #{asset.assetId},
                  #{calcType},
                  #{amount},
                  #{changeDetail},
                  #{changeDate},
                  NOW(),
                  NOW()
                         )
    </insert>
    <update id="updateCurrentAmount">
        UPDATE asset
        SET current_amount = #{currentAmount},
            updated_at = NOW()
        WHERE asset_id = #{assetId}
    </update>
    <select id="findChangeById" resultMap="assetChange">
        <include refid="assetChange"/>
        WHERE change_id = #{changeId}
    </select>
    <update id="updateChange">
        UPDATE asset_change
        SET asset_id = #{asset.assetId},
            calc_type = #{calcType},
            amount = #{amount},
            change_detail = #{changeDetail},
            change_date = #{changeDate},
            updated_at = NOW()
        WHERE change_id = #{changeId}
    </update>
    <select id="findChangeByAssetId" resultMap="assetChange">
        <include refid="assetChange"/>
        WHERE a.asset_id = #{assetId}
    </select>
    <delete id="deleteChange">
        DELETE FROM asset_change
        WHERE change_id = #{changeId}
    </delete>
    <select id="findByUserIdAndAllocated" resultMap="asset">
        <include refid="asset"/>
        WHERE user_id = #{userId}
            AND is_used = true
            AND is_allocated = true
    </select>
</mapper>